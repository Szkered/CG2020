cmake_minimum_required(VERSION 3.6)

# Name the project
project(CCGHomework)

if(NOT MSVC)
  # set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17 -pthread -lGL -lGLU -lglut -lX11 -lXxf86vm -lXext -lXrandr -lXt -lXi")
  # set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fpermissive -std=c++17 -pthread -lGL -lGLU -lglut -lX11 -lXxf86vm -lXext -lXrandr -lXt -lXi")
  set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fpermissive -std=c++17 -lGL -lGLU -lglut -lX11 -lXxf86vm -lXext -lXrandr -lXt -lXi")
  # set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -std=c++17 -pthread -lGL -lGLU -lglut -lX11 -lXxf86vm -lXext -lXrandr -lXt -lXi")
endif(NOT MSVC)

# Find MeshLib
find_package(MeshLib REQUIRED
             HINTS "${CMAKE_SOURCE_DIR}/3rdparty")
if (NOT MeshLib_FOUND)
    message(FATAL_ERROR "MeshLib Not Found!")
endif (NOT MeshLib_FOUND)

# Find OpenGL and GLUT
if(MSVC)
  find_package(freeglut REQUIRED HINTS "${CMAKE_SOURCE_DIR}/3rdparty")
  if (NOT freeglut_FOUND)
    message(FATAL_ERROR "freeglut Not Found!")
  endif (NOT freeglut_FOUND)
else(MSVC)
  find_package(OpenGL REQUIRED)
  find_package(GLUT REQUIRED)
endif(MSVC)

find_package(OpenMP)
if (NOT MeshLib_FOUND)
  message(FATAL_ERROR "OpenMP Not Found!")
endif (NOT MeshLib_FOUND)
set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
set (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")

# add_subdirectory("cutgraph")
# add_subdirectory("harmonic_map")
# add_subdirectory("hodge_decomposition")
add_subdirectory("spherical_harmonic_map")
add_subdirectory("ot_2d")
